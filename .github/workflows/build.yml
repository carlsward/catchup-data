name: Nightly JSON build

# 03:00 i Stockholm = 01:00 UTC
on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:    # gör att du kan klicka “Run workflow” manuellt

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # --- Debug: visa exakt requirements.txt som runnern ser ---
      - name: DEBUG – visa requirements.txt
        run: cat requirements.txt

      - name: Cache HF models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-hf-${{ hashFiles('requirements.txt') }}

        
      # --- Installera alla beroenden (inkl. lxml_html_clean) ---
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # --- Kör pipeline och exportera JSON ---
      - name: Run pipeline & export JSON
        run: python make_json.py

      # --- Publicera till GitHub Pages ---
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_branch: gh-pages
          publish_dir: ./public
          github_token: ${{ secrets.GITHUB_TOKEN }}


      - name: Debug NLLB tokenizer
        run: |
          python - <<'PY'
          from transformers import AutoTokenizer
          tok = AutoTokenizer.from_pretrained("facebook/nllb-200-distilled-600M")

          print("\n=== DEBUG NLLB TOKENIZER ===")
          print("Class:", tok.__class__.__name__)
          # 1) Finns moderna get_lang_id?
          has_get = hasattr(tok, "get_lang_id")
          print("get_lang_id:", has_get)

          # 2) Existerar mapping-tabeller?
          for attr in ("lang_code_to_id", "lang2id"):
              mapping = getattr(tok, attr, {})
              print(f"{attr}: {bool(mapping)}  (#keys={len(mapping) if mapping else 0})")

          # 3) Vad ger olika token-strängar?
          for t in ("__swe_Latn__", "<<swe_Latn>>", "<2swe_Latn>"):
              print(f"'{t}' ->", tok.convert_tokens_to_ids(t))

          # 4) Språk-ID via ev. metod
          if has_get:
              try:
                  print("get_lang_id('swe_Latn') ->", tok.get_lang_id("swe_Latn"))
              except Exception as e:
                  print("get_lang_id exception:", e)

          print("=============================\n")
          PY
